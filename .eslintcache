[{"Z:\\Github\\reminder-calendar-web\\src\\App.tsx":"1","Z:\\Github\\reminder-calendar-web\\src\\index.tsx":"2","Z:\\Github\\reminder-calendar-web\\src\\utils\\generateCalendar.ts":"3","Z:\\Github\\reminder-calendar-web\\src\\contexts\\calendar.tsx":"4","Z:\\Github\\reminder-calendar-web\\src\\pages\\Home\\index.tsx":"5","Z:\\Github\\reminder-calendar-web\\src\\components\\Weather\\index.tsx":"6","Z:\\Github\\reminder-calendar-web\\src\\components\\Calendar\\index.tsx":"7","Z:\\Github\\reminder-calendar-web\\src\\utils\\setNameMonth.ts":"8","Z:\\Github\\reminder-calendar-web\\src\\components\\index.tsx":"9","Z:\\Github\\reminder-calendar-web\\src\\config\\env.ts":"10","Z:\\Github\\reminder-calendar-web\\src\\contexts\\weather.tsx":"11","Z:\\Github\\reminder-calendar-web\\src\\services\\getWeather.ts":"12","Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Rectangular\\index.tsx":"13","Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\index.ts":"14","Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Circular\\index.tsx":"15","Z:\\Github\\reminder-calendar-web\\src\\contexts\\reminder.tsx":"16","Z:\\Github\\reminder-calendar-web\\src\\components\\Dashboard\\index.tsx":"17","Z:\\Github\\reminder-calendar-web\\src\\components\\Modal\\index.tsx":"18","Z:\\Github\\reminder-calendar-web\\src\\utils\\sortByHour.ts":"19","Z:\\Github\\reminder-calendar-web\\src\\components\\Reminder\\index.tsx":"20"},{"size":355,"mtime":1606257876959,"results":"21","hashOfConfig":"22"},{"size":275,"mtime":1606241396879,"results":"23","hashOfConfig":"22"},{"size":666,"mtime":1606308444952,"results":"24","hashOfConfig":"22"},{"size":1943,"mtime":1606316707336,"results":"25","hashOfConfig":"22"},{"size":2442,"mtime":1606343953765,"results":"26","hashOfConfig":"22"},{"size":2883,"mtime":1606361675806,"results":"27","hashOfConfig":"28"},{"size":1208,"mtime":1606359881620,"results":"29","hashOfConfig":"28"},{"size":326,"mtime":1606228138632,"results":"30","hashOfConfig":"22"},{"size":225,"mtime":1606318765831,"results":"31","hashOfConfig":"22"},{"size":338,"mtime":1606257075737,"results":"32","hashOfConfig":"22"},{"size":1626,"mtime":1606315736512,"results":"33","hashOfConfig":"22"},{"size":473,"mtime":1606262131880,"results":"34","hashOfConfig":"22"},{"size":383,"mtime":1606336476393,"results":"35","hashOfConfig":"22"},{"size":120,"mtime":1606306915615,"results":"36","hashOfConfig":"22"},{"size":453,"mtime":1606336473532,"results":"37","hashOfConfig":"22"},{"size":2576,"mtime":1606358830226,"results":"38","hashOfConfig":"22"},{"size":2662,"mtime":1606360129274,"results":"39","hashOfConfig":"28"},{"size":4815,"mtime":1606360735851,"results":"40","hashOfConfig":"28"},{"size":689,"mtime":1606342704337,"results":"41","hashOfConfig":"22"},{"size":1924,"mtime":1606361401160,"results":"42","hashOfConfig":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1206go3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1puh8rc",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Z:\\Github\\reminder-calendar-web\\src\\App.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\utils\\generateCalendar.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\contexts\\calendar.tsx",["84"],"import React, { useState, createContext, useEffect, useMemo } from 'react';\r\n\r\nimport { TCalendarContext, TComponentProps, TDateFormat } from '../types';\r\nimport generateCalendar from '../utils/generateCalendar';\r\n\r\nconst CalendarContext = createContext<TCalendarContext>({\r\n  calendar: [],\r\n  selectedDay: undefined,\r\n  createCalendar: () => null,\r\n  selectDay: () => null,\r\n  navigateBetweenDates: () => null,\r\n});\r\n\r\nexport const CalendarProvider: React.FC<TComponentProps> = ({\r\n  children,\r\n}: TComponentProps) => {\r\n  const [calendar, setCalendar] = useState<TDateFormat[]>([]);\r\n  const [selectedDay, setSelectedDay] = useState<TDateFormat>();\r\n\r\n  const date = useMemo(() => new Date(), []);\r\n\r\n  const createCalendar = (month: number, year: number) =>\r\n    setCalendar(generateCalendar(month, year));\r\n\r\n  const navigateBetweenDates = (month: number) => {\r\n    date.setMonth(date.getMonth() + month);\r\n    setCalendar(generateCalendar(date.getMonth(), date.getFullYear()));\r\n    setSelectedDay({\r\n      day: 1,\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n      dayOfWeek: date.getDay(),\r\n    });\r\n  };\r\n\r\n  const selectDay = (day: TDateFormat) => setSelectedDay(day);\r\n\r\n  const currentDay = date.getDate();\r\n  const currentDayOfWeek = date.getDay();\r\n  const currentMonth = date.getMonth();\r\n  const currentYear = date.getFullYear();\r\n\r\n  useEffect(() => {\r\n    setSelectedDay({\r\n      day: currentDay,\r\n      month: currentMonth,\r\n      year: currentYear,\r\n      dayOfWeek: currentDayOfWeek,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    createCalendar(currentMonth, currentYear);\r\n  }, [currentMonth, currentYear]);\r\n\r\n  return (\r\n    <CalendarContext.Provider\r\n      value={{\r\n        calendar,\r\n        selectedDay,\r\n        createCalendar,\r\n        selectDay,\r\n        navigateBetweenDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CalendarContext;\r\n","Z:\\Github\\reminder-calendar-web\\src\\pages\\Home\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Weather\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Calendar\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\utils\\setNameMonth.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\config\\env.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\contexts\\weather.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\services\\getWeather.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Rectangular\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\index.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Circular\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\contexts\\reminder.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Dashboard\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Modal\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\utils\\sortByHour.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Reminder\\index.tsx",[],{"ruleId":"85","severity":1,"message":"86","line":50,"column":6,"nodeType":"87","endLine":50,"endColumn":8,"suggestions":"88"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentDay', 'currentDayOfWeek', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.","ArrayExpression",["89"],{"desc":"90","fix":"91"},"Update the dependencies array to be: [currentDay, currentDayOfWeek, currentMonth, currentYear]",{"range":"92","text":"93"},[1539,1541],"[currentDay, currentDayOfWeek, currentMonth, currentYear]"]