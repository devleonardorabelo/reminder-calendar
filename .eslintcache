[{"Z:\\Github\\reminder-calendar-web\\src\\App.tsx":"1","Z:\\Github\\reminder-calendar-web\\src\\index.tsx":"2","Z:\\Github\\reminder-calendar-web\\src\\utils\\generateCalendar.ts":"3","Z:\\Github\\reminder-calendar-web\\src\\contexts\\calendar.tsx":"4","Z:\\Github\\reminder-calendar-web\\src\\pages\\Home\\index.tsx":"5","Z:\\Github\\reminder-calendar-web\\src\\components\\Weather\\index.tsx":"6","Z:\\Github\\reminder-calendar-web\\src\\components\\Calendar\\index.tsx":"7","Z:\\Github\\reminder-calendar-web\\src\\utils\\setNameMonth.ts":"8","Z:\\Github\\reminder-calendar-web\\src\\components\\index.tsx":"9","Z:\\Github\\reminder-calendar-web\\src\\config\\env.ts":"10","Z:\\Github\\reminder-calendar-web\\src\\contexts\\weather.tsx":"11","Z:\\Github\\reminder-calendar-web\\src\\services\\getWeather.ts":"12","Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Rectangular\\index.tsx":"13","Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\index.ts":"14","Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Circular\\index.tsx":"15","Z:\\Github\\reminder-calendar-web\\src\\contexts\\reminder.tsx":"16","Z:\\Github\\reminder-calendar-web\\src\\components\\Dashboard\\index.tsx":"17","Z:\\Github\\reminder-calendar-web\\src\\components\\Modal\\index.tsx":"18"},{"size":355,"mtime":1606257876959,"results":"19","hashOfConfig":"20"},{"size":275,"mtime":1606241396879,"results":"21","hashOfConfig":"20"},{"size":666,"mtime":1606308444952,"results":"22","hashOfConfig":"20"},{"size":1943,"mtime":1606316707336,"results":"23","hashOfConfig":"20"},{"size":2442,"mtime":1606318516841,"results":"24","hashOfConfig":"20"},{"size":2888,"mtime":1606328748599,"results":"25","hashOfConfig":"20"},{"size":1216,"mtime":1606308235680,"results":"26","hashOfConfig":"20"},{"size":326,"mtime":1606228138632,"results":"27","hashOfConfig":"20"},{"size":225,"mtime":1606318765831,"results":"28","hashOfConfig":"20"},{"size":338,"mtime":1606257075737,"results":"29","hashOfConfig":"20"},{"size":1626,"mtime":1606315736512,"results":"30","hashOfConfig":"20"},{"size":473,"mtime":1606262131880,"results":"31","hashOfConfig":"20"},{"size":383,"mtime":1606336476393,"results":"32","hashOfConfig":"20"},{"size":120,"mtime":1606306915615,"results":"33","hashOfConfig":"20"},{"size":453,"mtime":1606336473532,"results":"34","hashOfConfig":"20"},{"size":2179,"mtime":1606338466970,"results":"35","hashOfConfig":"20"},{"size":2663,"mtime":1606339325573,"results":"36","hashOfConfig":"20"},{"size":4905,"mtime":1606339720825,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1206go3",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"Z:\\Github\\reminder-calendar-web\\src\\App.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\utils\\generateCalendar.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\contexts\\calendar.tsx",["75"],"import React, { useState, createContext, useEffect, useMemo } from 'react';\r\n\r\nimport { TCalendarContext, TComponentProps, TDateFormat } from '../types';\r\nimport generateCalendar from '../utils/generateCalendar';\r\n\r\nconst CalendarContext = createContext<TCalendarContext>({\r\n  calendar: [],\r\n  selectedDay: undefined,\r\n  createCalendar: () => null,\r\n  selectDay: () => null,\r\n  navigateBetweenDates: () => null,\r\n});\r\n\r\nexport const CalendarProvider: React.FC<TComponentProps> = ({\r\n  children,\r\n}: TComponentProps) => {\r\n  const [calendar, setCalendar] = useState<TDateFormat[]>([]);\r\n  const [selectedDay, setSelectedDay] = useState<TDateFormat>();\r\n\r\n  const date = useMemo(() => new Date(), []);\r\n\r\n  const createCalendar = (month: number, year: number) =>\r\n    setCalendar(generateCalendar(month, year));\r\n\r\n  const navigateBetweenDates = (month: number) => {\r\n    date.setMonth(date.getMonth() + month);\r\n    setCalendar(generateCalendar(date.getMonth(), date.getFullYear()));\r\n    setSelectedDay({\r\n      day: 1,\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n      dayOfWeek: date.getDay(),\r\n    });\r\n  };\r\n\r\n  const selectDay = (day: TDateFormat) => setSelectedDay(day);\r\n\r\n  const currentDay = date.getDate();\r\n  const currentDayOfWeek = date.getDay();\r\n  const currentMonth = date.getMonth();\r\n  const currentYear = date.getFullYear();\r\n\r\n  useEffect(() => {\r\n    setSelectedDay({\r\n      day: currentDay,\r\n      month: currentMonth,\r\n      year: currentYear,\r\n      dayOfWeek: currentDayOfWeek,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    createCalendar(currentMonth, currentYear);\r\n  }, [currentMonth, currentYear]);\r\n\r\n  return (\r\n    <CalendarContext.Provider\r\n      value={{\r\n        calendar,\r\n        selectedDay,\r\n        createCalendar,\r\n        selectDay,\r\n        navigateBetweenDates,\r\n      }}\r\n    >\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CalendarContext;\r\n","Z:\\Github\\reminder-calendar-web\\src\\pages\\Home\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Weather\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Calendar\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\utils\\setNameMonth.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\config\\env.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\contexts\\weather.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\services\\getWeather.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Rectangular\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\index.ts",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Button\\Circular\\index.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\contexts\\reminder.tsx",[],"Z:\\Github\\reminder-calendar-web\\src\\components\\Dashboard\\index.tsx",["76"],"Z:\\Github\\reminder-calendar-web\\src\\components\\Modal\\index.tsx",["77","78"],{"ruleId":"79","severity":1,"message":"80","line":50,"column":6,"nodeType":"81","endLine":50,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":20,"column":6,"nodeType":"81","endLine":20,"endColumn":30,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":23,"nodeType":"87","messageId":"88","endLine":4,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":83,"column":5,"nodeType":"91","messageId":"92","endLine":83,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentDay', 'currentDayOfWeek', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'loadRemindersOfDay'. Either include it or remove the dependency array.",["94"],"@typescript-eslint/no-unused-vars","'TReminder' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [currentDay, currentDayOfWeek, currentMonth, currentYear]",{"range":"99","text":"100"},"Update the dependencies array to be: [selectedDay, reminders, loadRemindersOfDay]",{"range":"101","text":"102"},[1539,1541],"[currentDay, currentDayOfWeek, currentMonth, currentYear]",[762,786],"[selectedDay, reminders, loadRemindersOfDay]"]